//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace FlickrRx.svcWeather {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.webservicex.net", ConfigurationName="svcWeather.WeatherForecastSoap")]
    public interface WeatherForecastSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webservicex.net/GetWeatherByZipCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetWeatherByZipCode(string ZipCode, System.AsyncCallback callback, object asyncState);
        
        FlickrRx.svcWeather.WeatherForecasts EndGetWeatherByZipCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.webservicex.net/GetWeatherByPlaceName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetWeatherByPlaceName(string PlaceName, System.AsyncCallback callback, object asyncState);
        
        FlickrRx.svcWeather.WeatherForecasts EndGetWeatherByPlaceName(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net")]
    public partial class WeatherForecasts : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float latitudeField;
        
        private float longitudeField;
        
        private float allocationFactorField;
        
        private string fipsCodeField;
        
        private string placeNameField;
        
        private string stateCodeField;
        
        private string statusField;
        
        private WeatherData[] detailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
                this.RaisePropertyChanged("Latitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
                this.RaisePropertyChanged("Longitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float AllocationFactor {
            get {
                return this.allocationFactorField;
            }
            set {
                this.allocationFactorField = value;
                this.RaisePropertyChanged("AllocationFactor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FipsCode {
            get {
                return this.fipsCodeField;
            }
            set {
                this.fipsCodeField = value;
                this.RaisePropertyChanged("FipsCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
                this.RaisePropertyChanged("PlaceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string StateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
                this.RaisePropertyChanged("StateCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WeatherData[] Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
                this.RaisePropertyChanged("Details");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net")]
    public partial class WeatherData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dayField;
        
        private string weatherImageField;
        
        private string maxTemperatureFField;
        
        private string minTemperatureFField;
        
        private string maxTemperatureCField;
        
        private string minTemperatureCField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
                this.RaisePropertyChanged("Day");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string WeatherImage {
            get {
                return this.weatherImageField;
            }
            set {
                this.weatherImageField = value;
                this.RaisePropertyChanged("WeatherImage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MaxTemperatureF {
            get {
                return this.maxTemperatureFField;
            }
            set {
                this.maxTemperatureFField = value;
                this.RaisePropertyChanged("MaxTemperatureF");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MinTemperatureF {
            get {
                return this.minTemperatureFField;
            }
            set {
                this.minTemperatureFField = value;
                this.RaisePropertyChanged("MinTemperatureF");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MaxTemperatureC {
            get {
                return this.maxTemperatureCField;
            }
            set {
                this.maxTemperatureCField = value;
                this.RaisePropertyChanged("MaxTemperatureC");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string MinTemperatureC {
            get {
                return this.minTemperatureCField;
            }
            set {
                this.minTemperatureCField = value;
                this.RaisePropertyChanged("MinTemperatureC");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WeatherForecastSoapChannel : FlickrRx.svcWeather.WeatherForecastSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWeatherByZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWeatherByZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FlickrRx.svcWeather.WeatherForecasts Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FlickrRx.svcWeather.WeatherForecasts)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWeatherByPlaceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWeatherByPlaceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FlickrRx.svcWeather.WeatherForecasts Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FlickrRx.svcWeather.WeatherForecasts)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherForecastSoapClient : System.ServiceModel.ClientBase<FlickrRx.svcWeather.WeatherForecastSoap>, FlickrRx.svcWeather.WeatherForecastSoap {
        
        private BeginOperationDelegate onBeginGetWeatherByZipCodeDelegate;
        
        private EndOperationDelegate onEndGetWeatherByZipCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetWeatherByZipCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWeatherByPlaceNameDelegate;
        
        private EndOperationDelegate onEndGetWeatherByPlaceNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetWeatherByPlaceNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WeatherForecastSoapClient() {
        }
        
        public WeatherForecastSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherForecastSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherForecastSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherForecastSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetWeatherByZipCodeCompletedEventArgs> GetWeatherByZipCodeCompleted;
        
        public event System.EventHandler<GetWeatherByPlaceNameCompletedEventArgs> GetWeatherByPlaceNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FlickrRx.svcWeather.WeatherForecastSoap.BeginGetWeatherByZipCode(string ZipCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWeatherByZipCode(ZipCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FlickrRx.svcWeather.WeatherForecasts FlickrRx.svcWeather.WeatherForecastSoap.EndGetWeatherByZipCode(System.IAsyncResult result) {
            return base.Channel.EndGetWeatherByZipCode(result);
        }
        
        private System.IAsyncResult OnBeginGetWeatherByZipCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ZipCode = ((string)(inValues[0]));
            return ((FlickrRx.svcWeather.WeatherForecastSoap)(this)).BeginGetWeatherByZipCode(ZipCode, callback, asyncState);
        }
        
        private object[] OnEndGetWeatherByZipCode(System.IAsyncResult result) {
            FlickrRx.svcWeather.WeatherForecasts retVal = ((FlickrRx.svcWeather.WeatherForecastSoap)(this)).EndGetWeatherByZipCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWeatherByZipCodeCompleted(object state) {
            if ((this.GetWeatherByZipCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWeatherByZipCodeCompleted(this, new GetWeatherByZipCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWeatherByZipCodeAsync(string ZipCode) {
            this.GetWeatherByZipCodeAsync(ZipCode, null);
        }
        
        public void GetWeatherByZipCodeAsync(string ZipCode, object userState) {
            if ((this.onBeginGetWeatherByZipCodeDelegate == null)) {
                this.onBeginGetWeatherByZipCodeDelegate = new BeginOperationDelegate(this.OnBeginGetWeatherByZipCode);
            }
            if ((this.onEndGetWeatherByZipCodeDelegate == null)) {
                this.onEndGetWeatherByZipCodeDelegate = new EndOperationDelegate(this.OnEndGetWeatherByZipCode);
            }
            if ((this.onGetWeatherByZipCodeCompletedDelegate == null)) {
                this.onGetWeatherByZipCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWeatherByZipCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetWeatherByZipCodeDelegate, new object[] {
                        ZipCode}, this.onEndGetWeatherByZipCodeDelegate, this.onGetWeatherByZipCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FlickrRx.svcWeather.WeatherForecastSoap.BeginGetWeatherByPlaceName(string PlaceName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWeatherByPlaceName(PlaceName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FlickrRx.svcWeather.WeatherForecasts FlickrRx.svcWeather.WeatherForecastSoap.EndGetWeatherByPlaceName(System.IAsyncResult result) {
            return base.Channel.EndGetWeatherByPlaceName(result);
        }
        
        private System.IAsyncResult OnBeginGetWeatherByPlaceName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PlaceName = ((string)(inValues[0]));
            return ((FlickrRx.svcWeather.WeatherForecastSoap)(this)).BeginGetWeatherByPlaceName(PlaceName, callback, asyncState);
        }
        
        private object[] OnEndGetWeatherByPlaceName(System.IAsyncResult result) {
            FlickrRx.svcWeather.WeatherForecasts retVal = ((FlickrRx.svcWeather.WeatherForecastSoap)(this)).EndGetWeatherByPlaceName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWeatherByPlaceNameCompleted(object state) {
            if ((this.GetWeatherByPlaceNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWeatherByPlaceNameCompleted(this, new GetWeatherByPlaceNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWeatherByPlaceNameAsync(string PlaceName) {
            this.GetWeatherByPlaceNameAsync(PlaceName, null);
        }
        
        public void GetWeatherByPlaceNameAsync(string PlaceName, object userState) {
            if ((this.onBeginGetWeatherByPlaceNameDelegate == null)) {
                this.onBeginGetWeatherByPlaceNameDelegate = new BeginOperationDelegate(this.OnBeginGetWeatherByPlaceName);
            }
            if ((this.onEndGetWeatherByPlaceNameDelegate == null)) {
                this.onEndGetWeatherByPlaceNameDelegate = new EndOperationDelegate(this.OnEndGetWeatherByPlaceName);
            }
            if ((this.onGetWeatherByPlaceNameCompletedDelegate == null)) {
                this.onGetWeatherByPlaceNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWeatherByPlaceNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetWeatherByPlaceNameDelegate, new object[] {
                        PlaceName}, this.onEndGetWeatherByPlaceNameDelegate, this.onGetWeatherByPlaceNameCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FlickrRx.svcWeather.WeatherForecastSoap CreateChannel() {
            return new WeatherForecastSoapClientChannel(this);
        }
        
        private class WeatherForecastSoapClientChannel : ChannelBase<FlickrRx.svcWeather.WeatherForecastSoap>, FlickrRx.svcWeather.WeatherForecastSoap {
            
            public WeatherForecastSoapClientChannel(System.ServiceModel.ClientBase<FlickrRx.svcWeather.WeatherForecastSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetWeatherByZipCode(string ZipCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ZipCode;
                System.IAsyncResult _result = base.BeginInvoke("GetWeatherByZipCode", _args, callback, asyncState);
                return _result;
            }
            
            public FlickrRx.svcWeather.WeatherForecasts EndGetWeatherByZipCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                FlickrRx.svcWeather.WeatherForecasts _result = ((FlickrRx.svcWeather.WeatherForecasts)(base.EndInvoke("GetWeatherByZipCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWeatherByPlaceName(string PlaceName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PlaceName;
                System.IAsyncResult _result = base.BeginInvoke("GetWeatherByPlaceName", _args, callback, asyncState);
                return _result;
            }
            
            public FlickrRx.svcWeather.WeatherForecasts EndGetWeatherByPlaceName(System.IAsyncResult result) {
                object[] _args = new object[0];
                FlickrRx.svcWeather.WeatherForecasts _result = ((FlickrRx.svcWeather.WeatherForecasts)(base.EndInvoke("GetWeatherByPlaceName", _args, result)));
                return _result;
            }
        }
    }
}
